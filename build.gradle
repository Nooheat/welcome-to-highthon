buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2")
    }
}

allprojects {
    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'jacoco'

    repositories {
        jcenter()
    }
}

subprojects {
    group 'kr.highthon'
    version '0.0.1'


    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'groovy'

    sourceCompatibility = 1.8

    dependencies {
        annotationProcessor('org.projectlombok:lombok')
        implementation('org.projectlombok:lombok')
        implementation('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
        testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
    }

    jacocoTestReport {
        reports {
            html.enabled = true // 개발자 확인용
            xml.enabled = true // coveralls 전송용
        }
    }
}

project(':d-day-api') {
    dependencies {
        implementation project(':common')
    }
}

project(':back-office') {
    dependencies {
        implementation project(':common')
    }
}

project(':registration') {
    dependencies {
        implementation project(':common')
    }
}

task jacocoRootReport(type: JacocoReport) {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn = subprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true // 개발자 확인용
        xml.enabled = true // coveralls 전송용
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

//dependencies {
//    implementation('org.springframework.boot:spring-boot-starter-security')
//    implementation('org.springframework.boot:spring-boot-starter-hateoas')
//    implementation('org.springframework.boot:spring-boot-starter-mail')
//    implementation('org.springframework.boot:spring-boot-starter-web')
//    implementation('org.springframework.boot:spring-boot-starter-websocket')
//    implementation('org.springframework.boot:spring-boot-starter-data-redis')
//    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//    runtimeOnly('com.h2database:h2')
//    runtimeOnly('mysql:mysql-connector-java')
//    compileOnly('org.projectlombok:lombok')
//    testImplementation('org.springframework.boot:spring-boot-starter-test')
//}
